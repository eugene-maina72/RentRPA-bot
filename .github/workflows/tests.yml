# .github/workflows/tests.yml
name: tests

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
            **/requirements.txt
            **/requirements-dev.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          elif [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pytest pandas numpy openpyxl
          fi
          # Helpful for readable tracebacks
          pip install pytest-cov

      - name: Run tests
        run: |
          mkdir -p reports
          # Try to emit JUnit XML & coverage when pytest-cov is present; don't fail if plugin missing
          set -o pipefail
          pytest -q --maxfail=1 --disable-warnings \
            --junitxml=reports/junit.xml \
            --cov=app --cov-report=term-missing \
            || (echo "pytest exited nonzero"; exit 1)

      - name: Run offline harness (optional)
        if: ${{ hashFiles('tests/run_harness.py') != '' }}
        run: |
          python -m tests.run_harness | tee reports/harness.txt

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts-py${{ matrix.python-version }}
          path: |
            reports/**
          if-no-files-found: ignore
